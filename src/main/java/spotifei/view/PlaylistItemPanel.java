/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package spotifei.view;

import spotifei.model.Playlist;

/**
 * Painel que representa uma playlist individual na interface gráfica.
 * Exibe informações básicas da playlist e permite definir uma ação ao ser clicado.
 */
public class PlaylistItemPanel extends javax.swing.JPanel {
    
    private Runnable onClick;
    
    /**
     * Construtor que inicializa os componentes visuais e define as informações da playlist no rótulo.
     *
     * @param playlist Objeto {@code Playlist} que contém os dados a serem exibidos no painel.
     */
    public PlaylistItemPanel(Playlist playlist) {
        initComponents();
        lblPlaylistInfo.setText(playlist.getNome() + " - " + playlist.getQntMusicas() + " Música(s)");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblPlaylistInfo = new javax.swing.JLabel();

        setBackground(new java.awt.Color(44, 44, 44));
        setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        setMaximumSize(new java.awt.Dimension(2147483647, 70));
        setMinimumSize(new java.awt.Dimension(0, 70));
        setPreferredSize(new java.awt.Dimension(0, 70));
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });
        setLayout(new java.awt.BorderLayout());

        lblPlaylistInfo.setFont(new java.awt.Font("Yu Gothic UI", 1, 18)); // NOI18N
        lblPlaylistInfo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPlaylistInfo.setText("Playlist - Qnt. Músicas");
        add(lblPlaylistInfo, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Define a ação que será executada quando o painel for clicado.
     *
     * @param onClick Objeto {@code Runnable} representando a ação a ser executada no clique.
     */
    public void setOnClick(Runnable onClick) {
        this.onClick = onClick;
    }    
    
    /**
     * Evento acionado quando o painel é clicado.
     * Executa a ação definida previamente por {@code setOnClick()}, se existir.
     *
     * @param evt Evento de clique do mouse.
     */
    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        if (onClick != null) {
            onClick.run();
        }
    }//GEN-LAST:event_formMouseClicked
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel lblPlaylistInfo;
    // End of variables declaration//GEN-END:variables
}
