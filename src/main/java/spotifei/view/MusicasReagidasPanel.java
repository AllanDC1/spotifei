/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package spotifei.view;

import java.util.List;
import spotifei.app.Sessao;
import spotifei.controller.MusicaController;
import spotifei.model.Musica;

/**
 * Painel responsável por exibir as músicas reagidas por um usuário, de acordo com um tipo de reação.
 * Este painel é preenchido dinamicamente com itens de música utilizando o {@code ReacaoItemPanel}.
 */
public class MusicasReagidasPanel extends javax.swing.JPanel {

    /**
     * Construtor do painel que inicializa a interface e carrega as músicas reagidas com base na reação especificada.
     *
     * @param controller     Instância do {@code MusicaController} usada para manipular os dados das músicas.
     * @param tipoReacao     Tipo de reação que será usada para filtrar as músicas (ex: "Curtidas", "Amadas").
     */
    public MusicasReagidasPanel(MusicaController controller, String tipoReacao) {
        initComponents();
        
        controller.setMusicasReagidasView(this);
        controller.listarMusicasReagidas(Sessao.getUsuarioLogado(), tipoReacao.charAt(0));
        
        lblTituloReacao.setText("Músicas " + tipoReacao);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlTituloReacao = new javax.swing.JPanel();
        lblTituloReacao = new javax.swing.JLabel();
        pnlExibirMusicasReacao = new javax.swing.JScrollPane();
        pnlListaMusicasReacao = new javax.swing.JPanel();

        setLayout(new java.awt.BorderLayout());

        pnlTituloReacao.setBackground(new java.awt.Color(44, 44, 44));
        pnlTituloReacao.setPreferredSize(new java.awt.Dimension(850, 50));
        pnlTituloReacao.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 5, 7));

        lblTituloReacao.setFont(new java.awt.Font("Segoe UI", 1, 26)); // NOI18N
        lblTituloReacao.setText("Músicas Reação");
        pnlTituloReacao.add(lblTituloReacao);

        add(pnlTituloReacao, java.awt.BorderLayout.PAGE_START);

        pnlExibirMusicasReacao.setBackground(new java.awt.Color(55, 55, 55));

        pnlListaMusicasReacao.setBackground(new java.awt.Color(55, 55, 55));
        pnlListaMusicasReacao.setLayout(new javax.swing.BoxLayout(pnlListaMusicasReacao, javax.swing.BoxLayout.Y_AXIS));
        pnlExibirMusicasReacao.setViewportView(pnlListaMusicasReacao);

        add(pnlExibirMusicasReacao, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Atualiza a lista de músicas exibidas no painel com base na lista fornecida.
     * Cada música é representada por um {@code ReacaoItemPanel}.
     *
     * @param listaMusicas Lista de objetos {@code Musica} que serão exibidos no painel.
     */
    public void listarReacaoItem(List<Musica> listaMusicas) {
        pnlListaMusicasReacao.removeAll();

        for (Musica musica : listaMusicas) {
            MusicaItemPanel item = new MusicaItemPanel(musica);
            item.getBtnCurtir().setVisible(false);
            item.getBtnDescurtir().setVisible(false);

            pnlListaMusicasReacao.add(item);
        }

        pnlListaMusicasReacao.revalidate();
        pnlListaMusicasReacao.repaint();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel lblTituloReacao;
    private javax.swing.JScrollPane pnlExibirMusicasReacao;
    private javax.swing.JPanel pnlListaMusicasReacao;
    private javax.swing.JPanel pnlTituloReacao;
    // End of variables declaration//GEN-END:variables
}
